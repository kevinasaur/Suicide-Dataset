#!/usr/bin/env python
# coding: utf-8

# In[7]:


import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
get_ipython().magic(u'matplotlib inline')
import plotly.express as px

data = pd.read_csv('master.csv')

##Analysis of Data showed that there were alot fo Nulls in HDI - this needed to be replaced
data['HDI for year'] = data['HDI for year'].fillna(0)

data.head()


# In[9]:


##Analysing data - no visible 
data.describe()


# In[11]:


##Review distribution of gender
sns.countplot(x='sex', data=data);
plt.title('Distribution of Gender');


# In[44]:


##Distribution of Age
data['age'].value_counts().plot(kind='bar')
plt.title('Distribution of Age');


# In[22]:


perc = data.loc[:,["year","country",'suicides_no']]
perc['total_suicides'] = perc.groupby([perc.country,perc.year])['suicides_no'].transform('sum')
perc.drop('suicides_no', axis=1, inplace=True)
perc = perc.drop_duplicates()
perc = perc[(perc['year']>=1990.0) & (perc['year']<=2012.0)]
perc = perc.sort_values("year",ascending = False)

top_countries = ['Russian Federation','United States','Japan','France',"Ukraine"] 
perc = perc.loc[perc['country'].isin(top_countries)]
perc = perc.sort_values("year")
fig=px.bar(perc,x='country', y="total_suicides", animation_frame="year", 
           animation_group="country", color="country", hover_name="country")
fig.show()


# In[25]:


##Prevelance of Suicides among different age groups
age = data.loc[:,['year','age','suicides_no']]
age['total_suicides'] = age.groupby(['year','age'])['suicides_no'].transform('sum')
age.drop('suicides_no', axis=1, inplace=True)
age = age.drop_duplicates()
age = age[age['year']>=2000.0]
age = age.sort_values("year")
fig=px.bar(age,x='age', y="total_suicides", animation_frame="year", 
           animation_group="age", color="age", hover_name="age")
fig.show()


# In[26]:


##Correlation Heat Map
sns.heatmap(data.corr(), annot=True)


# In[27]:


## Relation between number of suicides and gdp_per_capita
fig = plt.figure(figsize=(20,7))
sns.scatterplot(data=data, x='gdp_per_capita ($)', y='suicides_no')


# In[32]:


fig = plt.figure(figsize=(25,10))
sns.scatterplot('suicides/100k pop', 'population', hue='population', data=data);
plt.title('Suicides vs Suicides/100k pop, Colored by population');


# In[ ]:




